Параллельное программирование
Программирование, при котором предусмотрена возможость выполнения разных 
участнок кода (методов или процедур) одновременно - параллельно
код1    код2                код1    код2
 |       |                   |       
 |       |                           |
 |       |                   |       
 |       |                           |
 |       |                   |        
 |       |                           |
 |       |                   |        
 |       |                           |
параллельно                  не параллельно
одновременно                 не одновременно

Многопоточность - программирование с использованием ресурсов ОС "потоков"
Многозадачность - программирование с использованием специальных ресурсов - 
задач - реализованных не в ОС, а в ЯП

Синхронный / ассинхронный
Термины связанные с управлением порядка выполнения кода
Синхронный - мы  управляем порядком: один за другим
Асинхронный - нет управления
Синхронизация (в программировании) - внедрение управления порядком выполнения

-------------------------------------------------
Потоки и многопоточность
Поток создается через класс Thread, используется void() / void(object param)

Для отмены / остановки потоков используется следующий механизм:
- создается источник токена
    СancellationTokenSource
- генерируется токен cts.Token и передается в поток (обычно через параметр)
- в теле потока переодически анализируется токен на предмет отмены
- действия по остановке потока выполняются в самом потоке. 
Вызов cts.Cancel() сам по себе ничего не делает с потоком,
а только переводит токен в состояние отмены